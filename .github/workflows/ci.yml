name: CI

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            platform: x64
            prefix: lnx
          - os: macos-11
            platform: x64
            prefix: osx
          - os: windows-2022
            platform: x64
            prefix: win
          - os: windows-2022
            platform: x86
            prefix: win

    runs-on: ${{ matrix.os }}

    env:
      PLATFORM: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # tee is so the version can be seen in the build output
    - name: Calculate Version
      shell: bash
      run: echo "version=$(.ci/version.sh)" | tee >> $GITHUB_ENV

    - name: Replace Version
      shell: bash
      run: |
        sed -i 's/QB64PE_JSON_VERSION/${{ env.version }}/' ./src/json.bi
        cat ./src/json.bi

    - name: Install dependencies
      if: ${{ matrix.prefix == 'lnx' }}
      run: sudo apt update && sudo apt install build-essential x11-utils mesa-common-dev libglu1-mesa-dev libasound2-dev zlib1g-dev pulseaudio dbus-x11 libportaudio2 libcurl4-openssl-dev

    - name: Install QB64 Linux
      shell: bash
      if: ${{ matrix.prefix == 'lnx' }}
      run: |
        wget https://github.com/QB64-Phoenix-Edition/QB64pe/releases/download/v3.5.0/qb64pe_lnx-3.5.0.tar.gz
        tar -zxf ./qb64pe_lnx-3.5.0.tar.gz

    - name: Setup QB64-PE Linxu
      shell: bash
      if: ${{ matrix.prefix == 'lnx' }}
      working-directory: ./qb64pe
      run: ./setup_lnx.sh 1

    - name: Install dependencies
      if: ${{ matrix.prefix == 'win' }}
      run: choco install wget --no-progess

    - name: Install QB64 Windows
      shell: bash
      if: ${{ matrix.prefix == 'win' }}
      run: |
        wget https://github.com/QB64-Phoenix-Edition/QB64pe/releases/download/v3.5.0/qb64pe_win-${{matrix.platform}}-3.5.0.7z
        7z x ./qb64pe_win-${{matrix.platform}}-3.5.0.7z

    - uses: maxim-lobanov/setup-xcode@v1
      if: ${{ matrix.prefix == 'osx' }}
      with:
        xcode-version: '11.7.0' # MacOS 10.15 Catalina

    - name: Install QB64 Mac OS
      shell: bash
      if: ${{ matrix.prefix == 'osx' }}
      run: |
        wget https://github.com/QB64-Phoenix-Edition/QB64pe/releases/download/v3.5.0/qb64pe_osx-3.5.0.tar.gz
        tar -zxf ./qb64pe_osx-3.5.0.tar.gz
        ./qb64pe/setup_osx.command 1

    - name: QB64 Version
      id: qb64pe-version
      shell: bash
      working-directory: ./qb64pe
      run: ./qb64pe -v

    - name: Test
      if: always() && steps.qb64pe-version.outcome == 'success'
      shell: bash
      run: ./tests/assert.sh ./tests/run_json_tests.sh ./qb64pe/qb64pe

    - name: Test2
      if: always() && steps.qb64pe-version.outcome == 'success'
      shell: bash
      run: ./tests/assert.sh ./tests/run_tests.sh ./qb64pe/qb64pe

    - uses: actions/upload-artifact@v3
      if: always() && ${{ matrix.prefix == 'lnx' }}
      with:
        name: qb64pe-json-${{ env.version }}
        path: |
          src/json.bi
          src/json.bm

    - name: Create release
      if: startsWith(github.ref, 'refs/tags/v') && ${{ matrix.prefix == 'lnx' }}
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: |
          src/json.bi
          src/json.bm
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
